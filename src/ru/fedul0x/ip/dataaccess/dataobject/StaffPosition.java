package ru.fedul0x.ip.dataaccess.dataobject;

// Generated 23.12.2012 2:11:14 by Hibernate Tools 3.2.1.GA
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
//import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import ru.fedul0x.ip.dataaccess.DataEntity;
import ru.fedul0x.ip.dataaccess.TitledColumn;
import ru.fedul0x.ip.dataaccess.TitledId;

/**
 * StaffPosition generated by hbm2java
 */
@Entity
@Table(name = "staff_position", schema = "public")
public class StaffPosition extends DataEntity {

    private String staffPositionName;
    private String description;

//    private static StaffPosition staffPositionChiefDoctor = new StaffPosition(0L, "Главный врач", "Главный врач");
//    private static StaffPosition deputyChiefDoctor = new StaffPosition(1L, "Заместитель главного врача", "Заместитель главного врача");
//    private static StaffPosition endocrinologist = new StaffPosition(2L, "Эндокринолог", "Эндокринолог");
//    private static StaffPosition therapist = new StaffPosition(3L, "Терапевт", "Терапевт");
//    private static StaffPosition medicalUltrasound = new StaffPosition(4L, "Врач УЗИ", "Врач УЗИ");
//    private static StaffPosition gynecologist = new StaffPosition(5L, "Гинеколог", "Гинеколог");
//    private static StaffPosition therapistVNS = new StaffPosition(6L, "Терапевт-ВНС", "Терапевт-ВНС");
//    private static StaffPosition consultantEndocrinologist = new StaffPosition(7L, "Консультант-эндокринолог", "Консультант-эндокринолог");
//    private static StaffPosition seniorMedicalSister = new StaffPosition(8L, "Старшая медицинская сестра", "Старшая медицинская сестра");
//    private static StaffPosition nurse = new StaffPosition(9L, "Медицинская сестра", "Медицинская сестра");
//    private static StaffPosition accountant = new StaffPosition(10L, "Бухгалтер", "Бухгалтер");
//    private static StaffPosition administratorCashier = new StaffPosition(11L, "Администратор-кассир", "Администратор-кассир");
//    private static StaffPosition cleaningLady = new StaffPosition(12L, "Уборщица", "Уборщица");
//    private static StaffPosition systemAdministrator = new StaffPosition(13L, "Системный администратор", "Системный администратор");
//    private static StaffPosition programmer = new StaffPosition(14L, "Программист", "Программист");
    //TODO what is operator diamond?
//    public static HashSet<StaffPosition> AllStaffPositions = new HashSet<>();
//
//    static {
//        AllStaffPositions.add(staffPositionChiefDoctor);
//        AllStaffPositions.add(deputyChiefDoctor);
//        AllStaffPositions.add(endocrinologist);
//        AllStaffPositions.add(therapist);
//        AllStaffPositions.add(medicalUltrasound);
//        AllStaffPositions.add(gynecologist);
//        AllStaffPositions.add(therapistVNS);
//        AllStaffPositions.add(consultantEndocrinologist);
//        AllStaffPositions.add(seniorMedicalSister);
//        AllStaffPositions.add(nurse);
//        AllStaffPositions.add(accountant);
//        AllStaffPositions.add(administratorCashier);
//        AllStaffPositions.add(cleaningLady);
//        AllStaffPositions.add(systemAdministrator);
//        AllStaffPositions.add(programmer);
//    }
//     private Set staffs = new HashSet(0);
    public StaffPosition() {
    }

    public StaffPosition(Long id) {
        this.id = id;
    }

    public StaffPosition(Long id, String staffPositionName, String description/*
             * , Set staffs
             */) {
        this.id = id;
        this.staffPositionName = staffPositionName;
        this.description = description;
//       this.staffs = staffs;
    }

    @TitledId(title="#")
    @TitledColumn(name = "id", unique = true, nullable = false, title="Должность")
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @TitledColumn(name = "staff_position_name", title="Должность")
    public String getStaffPositionName() {
        return this.staffPositionName;
    }

    public void setStaffPositionName(String staffPositionName) {
        this.staffPositionName = staffPositionName;
    }

    @TitledColumn(name = "description", title="Описание")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }
//@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="staffPosition")
//    public Set getStaffs() {
//        return this.staffs;
//    }
//    
//    public void setStaffs(Set staffs) {
//        this.staffs = staffs;
//    }
}
